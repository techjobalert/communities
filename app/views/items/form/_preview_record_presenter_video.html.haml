.fl-l{:style => "width:900px"}
  #inscription

  = button_tag(:id => 'start_record_button', :type => 'button', :disabled => true, :onclick => "startRecord()") do
    = content_tag(:strong, 'Start record')

  = button_tag(:id => 'play_button',:type => 'button', :onclick => "ins.movie.play()", :disabled => true) do
    = content_tag(:strong, 'Play')

  = button_tag(:id => 'sync_button',:type => 'button', :onclick => "mergeFunc()", :disabled => true) do
    = content_tag(:strong, 'Sync')

  .b-upload-item
    .b-upload-item__title.hr Choose thumbnail

  .b-upload-item__presenter-video

    = label_tag "pos_br", "" do
      = radio_button_tag "pos", "br", true, :title => "bottom right"
      = image_tag "video/presenter-video-rb.jpg"

    = label_tag "pos_tl", "" do
      = radio_button_tag "pos", "tl", false, :title => "top left"
      = image_tag "video/presenter-video-lt.jpg"

    = label_tag "pos_mr", "" do
      = radio_button_tag "pos", "mr", false, :title => "middle right"
      = image_tag "video/presenter-video-r.jpg"

    = label_tag "pos_ml", "" do
      = radio_button_tag "pos", "ml", false, :title => "middle left"
      = image_tag "video/presenter-video-l.jpg"

:javascript
  var ins,
      playbackPoints={},
      playButton = $("#play_button"),
      recordFileName = "#{@uuid}.flv";

  var startRecord = function(){
    $("#start_record_button").attr("disabled","true");
    ins.record.start(recordFileName);
  }

  var mergeFunc = function(){
    $("#sync_button strong").text("Saving..");
    var data = {  video_id: "#{@a_video.id}",
                  record_file_name: recordFileName,
                  playback_points: playbackPoints,
                  position: $("input[type=radio]:checked").val()};
    $.ajax({
      url: "#{item_merge_presenter_video_url(@item)}",
      type: "POST",
      dataType: "json",
      data: data,
      success: function(data){
        $("#sync_button strong").text("Saved");
        eval(data);
      }
    });
  };

  $(function(){
      ins = Inscription.run({
          container: 'inscription',
          player: {
              resource: "#{secure_link(@a_video, @a_video.file.mp4.url)}",
              server: 'rtmp://89.209.76.243'
          }
      });

      ins.on('load', function() {
          console.log('loaded');
          setTimeout(function() {
            var points = Inscription.Point.read("#{@a_video.timing}");
            _.each(points, function(point) {
                ins.point.add(point);
                console.log('Added point: ' + point + ' ms...');
            });
          }, 5000);

      });

      var callback = function() {
          console.log(arguments);
      };
      var c = 0;
      var onPlay = function(points) {
          playbackPoints[c] = {}
          playbackPoints[c].stop = secondsToHms(points[0]);
          playbackPoints[c].pause_duration = secondsToHms(points[1]/1000);
          ++c;
      }

      var onStateChage = function(state) {
        console.log(state);
        if (state === "paused"){
          playButton.removeAttr('disabled');
        }
        else if (state === "playing"){
          playButton.attr("disabled","true");
        }
        else if (state === "ready"){
          $("#sync_button").removeAttr('disabled');
          playButton.attr("disabled","true");
        }
      }

      var onRecorderReady = function(status){
        if (status == true){
          $("#start_record_button").removeAttr('disabled');
          playButton.removeAttr('disabled');
        }
      }

      ins.on('play',  onPlay);
      ins.on('stateChange', onStateChage);
      ins.on('recorderReady', onRecorderReady);
  });
