.b-admin-content
  .b-admin-content-title Waiting for your approval:
  .list
    .list-header
      = render :partial => "navigations"
      .list-content
        .b-admin-content-body.video
          .preview
            -if @a_video and @a_video.file_processing == true
              .attachment-videoa
                %i
                  Your attachment will be placed here after processings
            - elsif not @a_video.nil?
              .attachment-video
                - video = @item.paid_view?(current_user)

                - if video
                  = render partial: "layouts/video_viewer",locals: {:attachment => @item.attachment_type == "article" ? @a_video : video}
          .body
            = image_tag('/assets/logo.png', :width => '200')
            %h2= @item.title

            = simple_format @item.description
          .clear
          -if @a_pdf
            -if  @a_pdf and @a_pdf.file_processing == true
              .attachment-pdf
                %i
                  Your attached pdf will be placed here after processings
            -elsif not @a_pdf.blank?
              .attachment-pdf
                - pdf = @item.paid_view?(current_user)
                - if pdf
                  = render :partial => "layouts/pdf_viewer", :locals => { :attachment => pdf}

        .b-admin-content-keywords
          .b-admin-content-subtitle Keywords:

          = form_for @item, :url => item_change_keywords_path(@item), :method => :put, :remote => :true do |f|
            = hidden_field_tag "type", "change_keywords"
            = text_area_tag :tag_list, "", :rows => 1, :class => "keywords-textarea"
            %p= f.submit "", :class => "btn update-keywords"

        .b-admin-content-tools
          .b-admin-content-subtitle Deny reason:
          = form_for(Message.new, :url => deny_moderator_item_path(@item), :remote => :true) do |f|
            %p= f.text_area :body, :placeholder => 'Deny reasons'

            = link_to '', confirm_moderator_item_path(@item), :remote => true, :class => 'btn confirm'
            = f.submit '', :class => 'btn deny'


:javascript
  $('#tag_list').textext({
    plugins : 'autocomplete tags ajax',
    tagsItems: #{@item.tag_list.to_json},
    ajax : {
        url : '#{tags_items_path}',
        dataType : 'json',
        cacheResults : true
    }
  });
