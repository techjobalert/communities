.b-colleagues
  %h3
    Your Colleagues
  - if current_user.role? "doctor" and @tab != 'following'
    %span.btn.send-your-followers-message#send-message-dialog
  .clear

  .list
    .list-header
      .nav.account
        - if current_user.role? "doctor"
          = link_to users_path(:tab => "followers"), :class => "pjax followers #{ 'selected' if @tab == 'followers'}" do
            %span
            Followers
          = link_to users_path(:tab => "published_together"), :class => "pjax published-together #{ 'selected' if @tab == 'published_together'}" do
            %span
            Published
            %br
            together
        = link_to users_path(:tab => "following"), :class => "pjax following #{ 'selected' if @tab == 'following'}" do
          %span
          Following
        - if current_user.role? "doctor"
          = link_to users_path(:tab => "patients"), :class => "pjax patients #{ 'selected' if @tab == 'patients'}" do
            %span
            Patients
      .filter.account.collegues
        .field
          = form_for "", :url => search_users_path, :remote => true, :method => :get do |f|
            .tags.collegues-filter-form
              .label Filter by
              .filter-form
                - if @tab != 'patients'
                  %span.degree= f.select "degree", options_for_select(User.degrees), :prompt => 'Degree', :include_blank => true
                  / %span.location= f.select "location", options_for_select(['Location', 'Location']), :prompt => 'Location', :include_blank => true
                  %span.specialization= f.select "specialization", options_for_select(User.specializations), :prompt => 'Specialization', :include_blank => true
                  %span.num_pub= f.text_field "num_pub", :placeholder => 'Numâ€™ of publishing'

              .clear
            .search
              = f.text_field "q", :value => params[:q] ,:placeholder => 'Free search', :class => 'text-input', :id => "qsearch"
              = f.hidden_field "filter_type" , :value => "#{@tab}"
              = f.submit '', :class => 'btn go'
            .clear
      .clear
      .list-content
        = render :partial => "collegues_list", :locals => {:users => @users}
    - if @tab != 'following'
      %div{ :id => "send-message", :title=>"Send message to your #{@tab == 'published_together' ? 'collaborators' : @tab}", :style=>"display:none;" }
        %p
          %textarea
        %input{:type => "hidden", :value => "#{@tab}"}

- if current_user.role? "doctor"
  :javascript

    $( "#send-message" ).dialog({
      resizable: false,
      autoOpen: false,
      width: 400,
      modal: true,
      buttons: {
        "Send message": function() {
          $.ajax({
            type: 'POST',
            url: '#{user_send_message_to_colleagues_path(current_user)}',
            data: { 'message': {'body': $( "#send-message>p>textarea")[0].value },
              'colleagues_type': $("#send-message input").val() },
            dataType: 'script'
          });
        },
        Cancel: function() {
          $( this ).dialog( "close" );
        }
      }
    });

    $( "#send-message-dialog" ).click(function() {
      $( "#send-message" ).dialog( "open" );
      return false;
    });


:javascript
  changeNavigationTab(".tab-collegues");
  collegues_search = $('.filter.collegues #qsearch')
  if (collegues_search.length) {
    collegues_search.autocomplete({
      source: function(request, response) {
        var form;
        form = collegues_search.closest('form');
        return $.ajax({
          url: "users/search",
          data: {
            q: collegues_search.val(),
            degree: form.find("#_degree").val(),
            specialization: form.find("#_specialization").val(),
            num_pub: form.find("#_num_pub").val(),
            filter_type: form.find("#_filter_type").val(),
            autocomplete: true
          },
          type: "GET",
          success: function(data) {
            return response($.map(data, function(user) {
              return {
                url: user.url,
                title: user.full_name
              };
            }));
          }
        });
      },
      minLength: 3,
      select: function(event, ui) {
        window.location.assign(ui.item.url);
        return $(this).autocomplete("close");
      }
    }).data("autocomplete")._renderItem = function(ul, user) {
      return $("<li></li>").addClass("qsearch-item").data("item.autocomplete", user).append("<a class='pjax' href=\"" + user.url + "\">" + user.title + "</a>").appendTo(ul);
    };
  }